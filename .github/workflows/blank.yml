name: Ollama with Persistent Ngrok Tunnel

on:
  workflow_dispatch:  # Allows manual execution

jobs:
  run-ollama-ngrok:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Download & Install Ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | \
          sudo gpg --dearmor -o /etc/apt/keyrings/ngrok.gpg && \
          echo "deb [signed-by=/etc/apt/keyrings/ngrok.gpg] https://ngrok-agent.s3.amazonaws.com buster main" | \
          sudo tee /etc/apt/sources.list.d/ngrok.list && \
          sudo apt update && sudo apt install ngrok

      - name: Authenticate Ngrok
        run: |
          ngrok authtoken $NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Start Ngrok Tunnel
        run: |
          ngrok http http://localhost:8080

      - name: Fetch Ngrok URL (with retries)
        run: |
          echo "⏳ Waiting for Ngrok to provide a public URL..."
          for i in {1..20}; do
            NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
            if [[ "$NGROK_URL" != "null" && "$NGROK_URL" != "" ]]; then
              echo "✅ Ollama LLM is running at: $NGROK_URL"
              echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV
              exit 0
            fi
            sleep 5
          done
          echo "❌ ERROR: Ngrok did not return a public URL."
          exit 1

      - name: Keep Action Alive
        run: |
          echo "🔄 Keeping the server alive..."
          tail -f /dev/null
